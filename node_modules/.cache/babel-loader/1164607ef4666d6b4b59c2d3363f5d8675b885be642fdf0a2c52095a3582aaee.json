{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import{initialCryptoData}from'../services/mockData';const initialState={assets:initialCryptoData,status:'idle',sortBy:null,filter:''};export const cryptoSlice=createSlice({name:'crypto',initialState,reducers:{updateAssets:(state,action)=>{state.assets=action.payload;},setStatus:(state,action)=>{state.status=action.payload;},setSort:(state,action)=>{state.sortBy=action.payload;},setFilter:(state,action)=>{state.filter=action.payload;}}});export const{updateAssets,setStatus,setSort,setFilter}=cryptoSlice.actions;// Selectors\nexport const selectAllAssets=state=>state.crypto.assets;export const selectStatus=state=>state.crypto.status;export const selectSortBy=state=>state.crypto.sortBy;export const selectFilter=state=>state.crypto.filter;export const selectFilteredAndSortedAssets=state=>{const{assets,filter,sortBy}=state.crypto;// Filter assets\nconst filteredAssets=filter?assets.filter(asset=>asset.name.toLowerCase().includes(filter.toLowerCase())||asset.symbol.toLowerCase().includes(filter.toLowerCase())):assets;// Sort assets\nif(!sortBy)return filteredAssets;return[...filteredAssets].sort((a,b)=>{const aValue=a[sortBy.field];const bValue=b[sortBy.field];if(typeof aValue==='number'&&typeof bValue==='number'){return sortBy.direction==='asc'?aValue-bValue:bValue-aValue;}if(typeof aValue==='string'&&typeof bValue==='string'){return sortBy.direction==='asc'?aValue.localeCompare(bValue):bValue.localeCompare(aValue);}return 0;});};export default cryptoSlice.reducer;","map":{"version":3,"names":["createSlice","initialCryptoData","initialState","assets","status","sortBy","filter","cryptoSlice","name","reducers","updateAssets","state","action","payload","setStatus","setSort","setFilter","actions","selectAllAssets","crypto","selectStatus","selectSortBy","selectFilter","selectFilteredAndSortedAssets","filteredAssets","asset","toLowerCase","includes","symbol","sort","a","b","aValue","field","bValue","direction","localeCompare","reducer"],"sources":["/Users/barshanbanerjee/Desktop/Test/src/store/cryptoSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { CryptoState, CryptoAsset } from '../types/crypto';\nimport { initialCryptoData } from '../services/mockData';\n\nconst initialState: CryptoState = {\n  assets: initialCryptoData,\n  status: 'idle',\n  sortBy: null,\n  filter: '',\n};\n\nexport const cryptoSlice = createSlice({\n  name: 'crypto',\n  initialState,\n  reducers: {\n    updateAssets: (state, action: PayloadAction<CryptoAsset[]>) => {\n      state.assets = action.payload;\n    },\n    setStatus: (state, action: PayloadAction<CryptoState['status']>) => {\n      state.status = action.payload;\n    },\n    setSort: (state, action: PayloadAction<{ field: keyof CryptoAsset; direction: 'asc' | 'desc' } | null>) => {\n      state.sortBy = action.payload;\n    },\n    setFilter: (state, action: PayloadAction<string>) => {\n      state.filter = action.payload;\n    },\n  },\n});\n\nexport const { updateAssets, setStatus, setSort, setFilter } = cryptoSlice.actions;\n\n// Selectors\nexport const selectAllAssets = (state: { crypto: CryptoState }) => state.crypto.assets;\nexport const selectStatus = (state: { crypto: CryptoState }) => state.crypto.status;\nexport const selectSortBy = (state: { crypto: CryptoState }) => state.crypto.sortBy;\nexport const selectFilter = (state: { crypto: CryptoState }) => state.crypto.filter;\n\nexport const selectFilteredAndSortedAssets = (state: { crypto: CryptoState }) => {\n  const { assets, filter, sortBy } = state.crypto;\n  \n  // Filter assets\n  const filteredAssets = filter\n    ? assets.filter(asset => \n        asset.name.toLowerCase().includes(filter.toLowerCase()) ||\n        asset.symbol.toLowerCase().includes(filter.toLowerCase())\n      )\n    : assets;\n\n  // Sort assets\n  if (!sortBy) return filteredAssets;\n\n  return [...filteredAssets].sort((a, b) => {\n    const aValue = a[sortBy.field];\n    const bValue = b[sortBy.field];\n\n    if (typeof aValue === 'number' && typeof bValue === 'number') {\n      return sortBy.direction === 'asc' ? aValue - bValue : bValue - aValue;\n    }\n\n    if (typeof aValue === 'string' && typeof bValue === 'string') {\n      return sortBy.direction === 'asc'\n        ? aValue.localeCompare(bValue)\n        : bValue.localeCompare(aValue);\n    }\n\n    return 0;\n  });\n};\n\nexport default cryptoSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}