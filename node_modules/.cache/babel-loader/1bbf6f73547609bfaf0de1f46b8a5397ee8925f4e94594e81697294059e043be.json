{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { initialCryptoData } from '../services/mockData';\nconst initialState = {\n  assets: initialCryptoData,\n  status: 'idle',\n  sortBy: null,\n  filter: ''\n};\nexport const cryptoSlice = createSlice({\n  name: 'crypto',\n  initialState,\n  reducers: {\n    updateAssets: (state, action) => {\n      state.assets = action.payload;\n    },\n    setStatus: (state, action) => {\n      state.status = action.payload;\n    },\n    setSort: (state, action) => {\n      state.sortBy = action.payload;\n    },\n    setFilter: (state, action) => {\n      state.filter = action.payload;\n    }\n  }\n});\nexport const {\n  updateAssets,\n  setStatus,\n  setSort,\n  setFilter\n} = cryptoSlice.actions;\n\n// Selectors\nexport const selectAllAssets = state => state.crypto.assets;\nexport const selectStatus = state => state.crypto.status;\nexport const selectSortBy = state => state.crypto.sortBy;\nexport const selectFilter = state => state.crypto.filter;\nexport const selectFilteredAndSortedAssets = state => {\n  const {\n    assets,\n    filter,\n    sortBy\n  } = state.crypto;\n\n  // Filter assets\n  const filteredAssets = filter ? assets.filter(asset => asset.name.toLowerCase().includes(filter.toLowerCase()) || asset.symbol.toLowerCase().includes(filter.toLowerCase())) : assets;\n\n  // Sort assets\n  if (!sortBy) return filteredAssets;\n  return [...filteredAssets].sort((a, b) => {\n    const aValue = a[sortBy.field];\n    const bValue = b[sortBy.field];\n    if (typeof aValue === 'number' && typeof bValue === 'number') {\n      return sortBy.direction === 'asc' ? aValue - bValue : bValue - aValue;\n    }\n    if (typeof aValue === 'string' && typeof bValue === 'string') {\n      return sortBy.direction === 'asc' ? aValue.localeCompare(bValue) : bValue.localeCompare(aValue);\n    }\n    return 0;\n  });\n};\nexport default cryptoSlice.reducer;","map":{"version":3,"names":["createSlice","initialCryptoData","initialState","assets","status","sortBy","filter","cryptoSlice","name","reducers","updateAssets","state","action","payload","setStatus","setSort","setFilter","actions","selectAllAssets","crypto","selectStatus","selectSortBy","selectFilter","selectFilteredAndSortedAssets","filteredAssets","asset","toLowerCase","includes","symbol","sort","a","b","aValue","field","bValue","direction","localeCompare","reducer"],"sources":["/Users/barshanbanerjee/Desktop/Test/src/store/cryptoSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { CryptoState, CryptoAsset } from '../types/crypto';\nimport { initialCryptoData } from '../services/mockData';\n\nconst initialState: CryptoState = {\n  assets: initialCryptoData,\n  status: 'idle',\n  sortBy: null,\n  filter: '',\n};\n\nexport const cryptoSlice = createSlice({\n  name: 'crypto',\n  initialState,\n  reducers: {\n    updateAssets: (state, action: PayloadAction<CryptoAsset[]>) => {\n      state.assets = action.payload;\n    },\n    setStatus: (state, action: PayloadAction<CryptoState['status']>) => {\n      state.status = action.payload;\n    },\n    setSort: (state, action: PayloadAction<{ field: keyof CryptoAsset; direction: 'asc' | 'desc' } | null>) => {\n      state.sortBy = action.payload;\n    },\n    setFilter: (state, action: PayloadAction<string>) => {\n      state.filter = action.payload;\n    },\n  },\n});\n\nexport const { updateAssets, setStatus, setSort, setFilter } = cryptoSlice.actions;\n\n// Selectors\nexport const selectAllAssets = (state: { crypto: CryptoState }) => state.crypto.assets;\nexport const selectStatus = (state: { crypto: CryptoState }) => state.crypto.status;\nexport const selectSortBy = (state: { crypto: CryptoState }) => state.crypto.sortBy;\nexport const selectFilter = (state: { crypto: CryptoState }) => state.crypto.filter;\n\nexport const selectFilteredAndSortedAssets = (state: { crypto: CryptoState }) => {\n  const { assets, filter, sortBy } = state.crypto;\n  \n  // Filter assets\n  const filteredAssets = filter\n    ? assets.filter(asset => \n        asset.name.toLowerCase().includes(filter.toLowerCase()) ||\n        asset.symbol.toLowerCase().includes(filter.toLowerCase())\n      )\n    : assets;\n\n  // Sort assets\n  if (!sortBy) return filteredAssets;\n\n  return [...filteredAssets].sort((a, b) => {\n    const aValue = a[sortBy.field];\n    const bValue = b[sortBy.field];\n\n    if (typeof aValue === 'number' && typeof bValue === 'number') {\n      return sortBy.direction === 'asc' ? aValue - bValue : bValue - aValue;\n    }\n\n    if (typeof aValue === 'string' && typeof bValue === 'string') {\n      return sortBy.direction === 'asc'\n        ? aValue.localeCompare(bValue)\n        : bValue.localeCompare(aValue);\n    }\n\n    return 0;\n  });\n};\n\nexport default cryptoSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}